getgenv().prediction = 0.102
getgenv().offset = 0.6
getgenv().resolver = false
getgenv().smoothness = 0.35
getgenv().healthThreshold = 1

local players = game:GetService("Players")
local localplayer = players.LocalPlayer
local mouse = localplayer:GetMouse()
local userinputservice = game:GetService("UserInputService")
local runservice = game:GetService("RunService")
local currentCamera = workspace.CurrentCamera

local victim = nil
local targeting = false
local fovThreshold = 0.5

-- Wall check using raycast
local function hasLineOfSight(origin, targetPosition)
    local rayParams = RaycastParams.new()
    rayParams.FilterDescendantsInstances = {localplayer.Character}
    rayParams.FilterType = Enum.RaycastFilterType.Blacklist

    local result = workspace:Raycast(origin, (targetPosition - origin).Unit * 999, rayParams)
    if result then
        return result.Instance:IsDescendantOf(game.Players:GetPlayerFromCharacter(victim and victim.Parent or nil).Character)
    end
    return true
end

-- FOV check
local function isWithinFOV(target)
    local cameraPosition = currentCamera.CFrame.Position
    local directionToTarget = (target.Position - cameraPosition).Unit
    local cameraDirection = currentCamera.CFrame.LookVector
    return directionToTarget:Dot(cameraDirection) > fovThreshold
end

-- Target selection
local function target()
    local bestTarget = nil
    local shortest = math.huge

    for _, plr in pairs(players:GetPlayers()) do
        if plr ~= localplayer and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
            local humanoid = plr.Character:FindFirstChildOfClass("Humanoid")
            local ragdollTag = plr.Character:FindFirstChild("Ragdolled")  -- bool or tag

            if humanoid and humanoid.Health > 0 and not (ragdollTag and ragdollTag.Value) then
                local hrp = plr.Character.HumanoidRootPart
                local success, screenPos = pcall(function()
                    return currentCamera:WorldToViewportPoint(hrp.Position)
                end)

                if success and screenPos.Z > 0 and isWithinFOV(hrp) then
                    if hasLineOfSight(currentCamera.CFrame.Position, hrp.Position) then
                        local distance = (Vector2.new(mouse.X, mouse.Y) - Vector2.new(screenPos.X, screenPos.Y)).Magnitude
                        if distance < shortest then
                            bestTarget = hrp
                            shortest = distance
                        end
                    end
                end
            end
        end
    end

    return bestTarget
end

-- Toggle
userinputservice.InputBegan:Connect(function(input, processed)
    if not processed and input.KeyCode == Enum.KeyCode.Q then
        targeting = not targeting
        victim = targeting and target() or nil
    end
end)

-- Velocity calculation
local velocity = Vector3.new(0, 0, 0)
local oldpos = Vector3.new(0, 0, 0)

runservice.Heartbeat:Connect(function(dt)
    if victim and victim.Parent then
        local currentpos = victim.Position
        local displacement = currentpos - oldpos
        local vector = displacement / dt
        velocity = velocity:Lerp(Vector3.new(vector.X, vector.Y * 0.94 * getgenv().offset, vector.Z), 0.4)
        oldpos = currentpos
    end
end)

-- Main aim logic
runservice.RenderStepped:Connect(function()
    if targeting and victim and victim.Parent then
        local char = victim.Parent
        local humanoid = char:FindFirstChildOfClass("Humanoid")
        local ragdollTag = char:FindFirstChild("Ragdolled")

        if humanoid and humanoid.Health <= getgenv().healthThreshold or (ragdollTag and ragdollTag.Value) then
            targeting = false
            victim = nil
        else
            local pos = victim.Position
            if getgenv().usePrediction then
                pos = pos + ((getgenv().resolver and velocity) or victim.Velocity) * getgenv().prediction
            end
            currentCamera.CFrame = currentCamera.CFrame:Lerp(
                CFrame.new(currentCamera.CFrame.Position, pos),
                getgenv().smoothness
            )
        end
    end

    -- Untoggle if localplayer HP is 1 or below
    if localplayer.Character and localplayer.Character:FindFirstChildOfClass("Humanoid") then
        local hp = localplayer.Character:FindFirstChildOfClass("Humanoid").Health
        if hp <= 1 then
            targeting = false
            victim = nil
        end
    end
end)
